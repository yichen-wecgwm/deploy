apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app
  name: {{ include "spring-helm-sample.fullname" . }}
  labels:
    {{- include "spring-helm-sample.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spring-helm-sample.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "spring-helm-sample.selectorLabels" . | nindent 8 }}
        {{- toYaml .Values.podLabels | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spring-helm-sample.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.server.contextPath }}actuator/health/liveness
              port: {{ .Values.server.port }}
            initialDelaySeconds: 30
            periodSeconds: 8
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: {{ .Values.server.contextPath }}actuator/health/readiness
              port: {{ .Values.server.port }}
            initialDelaySeconds: 30
            periodSeconds: 8
            failureThreshold: 5
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
          env:
            {{ toYaml .Values.env | nindent 12 }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
            {{ toYaml .Values.envFrom | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{ toYaml .Values.volumeMounts | nindent 12 }}
            - mountPath: /application/log
              name: log-volume
      volumes:
        {{ toYaml .Values.volumes | nindent 12 }}
        - name: log-volume
          hostPath:
            path: /usr/local/log
            type: Directory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
